Mon Jun 17 16:30:08 CEST 2013

TODO:
+ spatial selection: can split a trip into two or more trips
+ use spDists() to compute distances
+ point Jinlong to intro to S4 classes
+ look at spacetime/R/coerce.R: there the STTDF coercion function are defined
+ look at spacetime/R/STTDF-methods.R: there the STTDF creation and methods
  are defined.
+ understand how do.call and lapply work, e.g. in STTDF-methods.R

learn S4 from:
[16:54:19] Edzer Pebesma: https://github.com/hadley/devtools/wiki

commit code to the trajectory package on:
[16:56:16] Edzer Pebesma: https://r-forge.r-project.org/projects/spacetime/

+ Jinlong will study the two overlay vignettes, in sp and spacetime.

+ next telco Jun 25, 16:00 CET



=======================
Jun. 24, 2013
Weekly Report 1:
=======================

Status:

- First (unsuccessful) take on developing spatial and temporal selection operations. These operations will be revised later to make use of classes and methods that currently available in spacetime and sp packages.
- Set up subversion control in RStudio and start to commit
(I started to use Mac from this week. The subversion on my Mac is working, but not on my PC. I will figure out how to set up subversion control on PC later next week).
- Studied the overlay and aggregate vignettes from sp package (see links below). Learned the operations of space, time, and space-time overlay/aggreation realized by over() and aggregate() methods.
http://cran.r-project.org/web/packages/sp/vignettes/over.pdf
http://cran.r-project.org/web/packages/spacetime/vignettes/sto.pdf
- Studied section "SoftwareSystems", "The S3 object system", and "The S4 object system" from
Advanced R development: making reusable code (link: https://github.com/hadley/devtools/wiki). Learned the major differences between S3 and S4 objects (formal class definitions & multiple dispatch) and how to create/modify S4 objects.
- Learned how do.call and lapply works from spacetime/R/STTDF-methods.R
- Learned how STTDF objects are coerced from ltraj objects from spacetime/R/coerce.R


Problems:

- Need to et more familiar with concepts and terms in R package development
- Understand ltraj objects


Task for next week:

- Set up subversion on control on my PC;
- Selective reading: http://cran.us.r-project.org/doc/manuals/r-devel/R-exts.pdf
- Study read.R in the demo from trajectories
- First take on selection operations based on "["
- Write methods that compute speed, turning angle, line length based on read.R



=======================
Jun. 30, 2013
Weekly Report 2:
=======================

Notes:
- STT: a list object with each element as a burst.
- STT -> STTDF
- from Edzar:
the function in sp that computes distances between consecutive points is
called LineLength. It's implemented in C, and can do both longlat and
Euclidian (e.g., UTM) coordinates:
> ?LineLength
> x = runif(10)
> y = runif(10)
> LineLength(cbind(x,y))
[1] 6.235286
> LineLength(cbind(x,y),sum=FALSE)
[1] 0.5643880 0.5837999 0.6260173 0.4729516 0.3879915 0.9119911 0.8066018
[8] 1.0431687 0.8383759
> LineLength(cbind(x,y),longlat=TRUE,sum=FALSE)
[1]  62.77293  64.92568  69.66763  52.52765  43.18699 101.19516  89.05212
[8] 115.58249  92.55943
- 


Tasks:
- learn read.R from spacetime package
- write sttdf_computation.R (spacetime/pkg/trajectories/demo/)
1) calculate displacement using LineLength() from sp package
2) calculate time passed between consecutive points
3) caluclate speed (Unit: m/s)
4) calculate relative angle change between consecutive points
5) calculate absolute angle change between consecutive points
6) (naive) transporation mode detection
7) calculation of trajectory properties (e.g., elevation change)??
- Selective reading: http://cran.us.r-project.org/doc/manuals/r-devel/R-exts.pdf
- First take on STTDF_selection.R based on "[" (spacetime/pkg/trajectories/demo/)


Problem:
(Some questions might not be clear without context. Please let me know if you need any clarification)

- How to handle a GPS point record If time interval is 0 between two consecutive points? Delete that piont or keep that but set dist, timeLapsed, speed, etc to NA?
- How to make connections between points (i.e., rows) from sttdf@data and STIs from sttdf@traj?
- Where to store the attributes of a burst (e.g., total length, total time, average speed)?
- Whether to make use of SpatialLines class and how (see examples in STTDF_selection.R)?


Tasks for next week:
- Put STTDF_computation.R into a function STItoSTTDF
- Start to write documentation
- Write a function - over() for trajectories package
select all trajs in an area - SpatialLine objects
select all trajs between 2008 - 2009
- Verification of the data (space, time)
- Selection functions that fliter data based on, for example, certain time interval



=======================
July. 8, 2013
Weekly Report 3:
=======================

Notes:
- Write packages/functions!!
- sttdf@data --> list
- burst id in STI


To-do:
- Put STTDF_computation.R into a function STItoSTTDF
- Start to write documentation
- Write a function - over() for trajectories package
select all trajs in an area - SpatialLine objects
select all trajs between 2008 - 2009
- Verification of the data (space, time)
- Selection functions that fliter data based on, for example, certain time interval

Status:
- Put STTDF_computation.R into a method at trajectries/demo/STItoSTTDF.R
- Modified read.R as trajectories/demo/geolife_reader.R with id and trip added (if id or trip is missing, dummy id or trip will be added)
- Calculated the elevation change between consecutive GPS points in trajectories/demo/STItoSTTDF.R (potentially can be applied to other properties of trajectories data)
- Calculated the abosoluate angles between consecutive GPS points using gzAzimuth() from maptools package (see STItoSTTDF.R)
- Start writing documentation for methods developed

Problems:
- What is STbox?
- How to avoid using for loop in R (e.g., Line ##72 in STItoSTTDF.R)?
- What to expect about the input format of trajectory data? (Currently work with GeoLife dataset, but in general should we assume data comes in format of dataframe(s) with each column as a property?)

Tasks for next week:
- TBA after meeting with Pebesma on Tuesday


=======================
July. 15, 2013
Weekly Report 4:
=======================

Notes:
- Demo scripts should be executable independently

To-do:
- Move all methods to R directory (instead of Demo directory)
- Learn how to build/install/check package (!!!HIGHEST PRIORITY!!!)
- Figure out why keyword section are missing
- Export STItoSTTDF to trajectories/NAMESPACE
- Move the test section to demo directory
- Put all testing in the example code in the R documentation file
- Create a toy data set for example section of Rd file
- Make calculation of elevation change faster by replacing for loops with diff() functions
- Add ID and trip as attributes of STI objects in the traj slot of STTDF object

Status:
- Learned how to build/install/check package
- Moved all methods to R directory
- Exported STItoSTTDF to trajectories/NAMESPACE
- Moved the test section to demo directory
- Put all testing in the example code in the R documentation file
- Created a toy data set for example section of Rd file
- Made calculation of elevation change faster by replacing for loops with diff() functions
- Added ID and trip as attributes of STI objects in the traj slot of STTDF object

Problems:
- Need to find a sample dataset with proper license for demostration
- 

Tasks:
- TBA after meeting with Dr. Pebesma on Tuesday.


=======================
July. 29, 2013
Weekly Report 6:
=======================

To-do:
- Start with a simpler scenario (a traj with a polygon)
- Use SpatialLines
- Coerce STI(STTDF) into SpatialLines to make use of over() for SpatialLines
- over.sttdf.Spatial(Polygon, Line, Grid, Point) (without time)
- Two selection level:
 spatial selection (on traj level) (e.g., a STTDF and a polygon)
 cutting trajs (on point level) (e.g., cut out trajs that overlapping with a polygon)
cutTraj <- function(sttdf, SpatialPolygon){
}
over.STTDF.Spatial <- function(sttdf, Spatial){
}

Status:
- Implemented the spatial overlay between STTDF and SpatialPolygons;
- Wrote a function that coerces STTDF objects to SpatialLines objects;
- Enables spatial overlay between STTDF and objects from Spatial classes from sp package;
- Wrote a function that cutting trajs (on point level) based on its overlay with a SpatialPolygons object.

Problems:
- When coerce STTDF objects into SpatialLines object, the attribute data in the data slot of STTDF objects is lost;
- When a trajectory is cutted into more than one piece by the overlay operation with a polygon, the over() function won't automatically detect the breaking points that divide the trajectory into multiple segments;
- Potential bug in the trajectory cutting function.

Tasks:
- Store the attribute data of STTDF objects when coerce it into SpatialLines;
- Reverse the coersion of STTDF objects to SpatialLines objects;
- Testing the bug in the trajectory cutting function.

=======================
Aug. 5, 2013
Weekly Report 7:
=======================

Status:
- Impletmented the plot function for STI  and STTDF objects;
- Impletmented the summary function for STI and STTDF objects;
- Added STItoSpatialLines.R;
- Added test directory and move all the demos into that directory;
- House-cleaning for the working directory;

Problems:
- Need to remove the markers for bounding box when plot STTDF objects;
- Need to rename and modify the cut.STTDF.SpatialPolygons.R into cut.R;

Tasks:
- Impletment the selecting method for STTDF;
- Impletment the temporal sampling for STTDF;
- Modify the traj_stats into aggreate.STTDF();
